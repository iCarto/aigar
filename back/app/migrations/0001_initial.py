# Generated by Django 4.2 on 2025-03-03 11:54

import back.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('domains', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForthcomingInvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.CharField(choices=[('derecho', 'Derecho'), ('reconexion', 'Reconexion')], max_length=256, verbose_name='concepto')),
                ('value', models.FloatField(verbose_name='valor')),
            ],
            options={
                'verbose_name': 'concepto a facturar en siguientes meses',
                'verbose_name_plural': 'conceptos a facturar en siguientes meses',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(help_text='El Id del recibo no puede estar vacío y no debe repetirse', primary_key=True, serialize=False, verbose_name='Id recibo')),
                ('version', models.PositiveSmallIntegerField(default=1, verbose_name='Version')),
                ('anho', models.CharField(max_length=4, verbose_name='Año')),
                ('mes', models.CharField(max_length=2, verbose_name='Mes')),
                ('caudal_anterior', models.PositiveIntegerField(verbose_name='Caudal anterior')),
                ('caudal_actual', models.PositiveIntegerField(blank=True, null=True, verbose_name='Caudal actual')),
                ('cuota_fija', models.FloatField(default=0, verbose_name='Cuota fija')),
                ('cuota_variable', models.FloatField(default=0, verbose_name='Cuota variable')),
                ('comision', models.FloatField(default=0, verbose_name='Comisión')),
                ('ahorro', models.FloatField(default=0, verbose_name='Ahorro')),
                ('mora', models.FloatField(default=0, verbose_name='Mora')),
                ('derecho', models.FloatField(default=0, help_text='Parte del pago (cuota) del derecho de conexión', verbose_name='Derecho conexión')),
                ('reconexion', models.FloatField(default=0, verbose_name='Reconexión')),
                ('asamblea', models.FloatField(default=0, verbose_name='Inasistencia a Asambleas')),
                ('jornada_trabajo', models.FloatField(default=0, help_text='Inasistencia a Jornadas de trabajo', verbose_name='Jornadas')),
                ('traspaso', models.FloatField(default=0, verbose_name='Traspaso')),
                ('saldo_pendiente', models.FloatField(default=0, verbose_name='Saldo pendiente')),
                ('descuento', models.FloatField(default=0, help_text='Si el recibo tiene algún descuento especial introduzcalo', verbose_name='Descuentos')),
                ('otros', models.FloatField(default=0, verbose_name='Otros')),
                ('total', models.FloatField(blank=True, null=True, verbose_name='Total')),
                ('estado', models.TextField(choices=[('nueva', 'Nueva'), ('pendiente_de_cobro', 'Pendiente De Cobro'), ('cobrada', 'Cobrada'), ('no_cobrada', 'No Cobrada'), ('anulada', 'Anulada')], default='nueva', editable=False, verbose_name='Estado')),
                ('observaciones', models.TextField(blank=True, default='', null=True, verbose_name='Observaciones')),
                ('ontime_payment', models.FloatField(default=0, verbose_name='Pago en plazo')),
                ('late_payment', models.FloatField(default=0, verbose_name='Pago con mora')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'recibo',
                'verbose_name_plural': 'recibos',
                'ordering': ('-mes_facturacion_id', '-version', 'member_id'),
            },
        ),
        migrations.CreateModel(
            name='InvoicingMonth',
            fields=[
                ('id_mes_facturacion', models.CharField(editable=False, max_length=6, primary_key=True, serialize=False, unique=True, verbose_name='Identificador')),
                ('anho', models.CharField(max_length=4, verbose_name='Año')),
                ('mes', models.CharField(max_length=2, verbose_name='Mes')),
                ('is_open', models.BooleanField(default=True, editable=False, verbose_name='Facturación en curso')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'mes de facturación',
                'verbose_name_plural': 'meses de facturación',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(help_text='El Identificador del pago no puede estar vacío y no debe repetirse', primary_key=True, serialize=False, verbose_name='Id pago')),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('monto', models.FloatField(verbose_name='Monto')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.invoice')),
            ],
            options={
                'verbose_name': 'pago',
                'verbose_name_plural': 'pagos',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(help_text='El número de socio/a no puede estar vacío y no debe repetirse', primary_key=True, serialize=False, verbose_name='Número de socio/a')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('medidor', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='Medidor')),
                ('orden', back.fields.RangedIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Orden del Recorrido')),
                ('observaciones', models.TextField(blank=True, default='', null=True, verbose_name='Observaciones')),
                ('consumo_maximo', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Consumo Máximo')),
                ('consumo_reduccion_fija', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Reducción Fija de Consumo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha última modificación')),
                ('personas_acometida', models.IntegerField(blank=True, help_text='Número de personas que habitan en la casa/acometida que está formada por una o varias familias', null=True)),
                ('dui', models.CharField(blank=True, help_text='Documento Único de Identidad', max_length=10, null=True)),
                ('tipo_uso', models.CharField(choices=[('Humano', 'Humano'), ('Comercial', 'Comercial')], help_text='Tipo de uso: Humano o Comercial', max_length=20)),
                ('status', models.TextField(choices=[('Activa', 'Activa'), ('Inactiva', 'Inactiva'), ('Eliminada', 'Eliminada')], default='Activa', editable=False, verbose_name='tipo de socio/a')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='domains.zone', to_field='name', verbose_name='sector / comunidad')),
            ],
            options={
                'verbose_name': 'socio/a',
                'verbose_name_plural': 'socios/as',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(help_text='El Identificador de la lectura no puede estar vacío y no debe repetirse', primary_key=True, serialize=False, verbose_name='Id lectura')),
                ('caudal_anterior', models.PositiveIntegerField(verbose_name='Caudal anterior')),
                ('caudal_actual', models.PositiveIntegerField(verbose_name='Caudal actual')),
                ('cambio_medidor', models.BooleanField(default=False, verbose_name='Cambio de medidor')),
                ('medidor', models.CharField(blank=True, max_length=30, null=True, verbose_name='Medidor')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.invoice')),
            ],
            options={
                'verbose_name': 'lectura',
                'verbose_name_plural': 'lecturas',
                'ordering': ('id',),
            },
        ),
        migrations.AddConstraint(
            model_name='invoicingmonth',
            constraint=models.UniqueConstraint(condition=models.Q(('is_open', True)), fields=('is_open',), name='app_invoicingmonth_only_one_invoicing_month_open', violation_error_message='Existen varios meses de facturación abiertos. Debe revisar este problema.'),
        ),
        migrations.AlterUniqueTogether(
            name='invoicingmonth',
            unique_together={('anho', 'mes')},
        ),
        migrations.AddField(
            model_name='invoice',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.member'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='mes_facturacion',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='app.invoicingmonth'),
        ),
        migrations.AddField(
            model_name='forthcominginvoiceitem',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.member', verbose_name='socio/a'),
        ),
        migrations.CreateModel(
            name='LatestInvoice',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('app.invoice',),
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.UniqueConstraint(condition=models.Q(('estado', 'anulada'), _negated=True), fields=('mes_facturacion_id', 'member_id'), name='app_invoice_only_one_invoice_per_month_per_member', violation_error_message='Un socio/a no puede tener más de dos recibos no anulados en el mismo mes.'),
        ),
    ]
