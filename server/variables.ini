#!/bin/bash

# set -e: stops the script on error
# set -u: stops the script on unset variables
# set -o pipefail:  fail the whole pipeline on first error
# https://www.howtogeek.com/782514/how-to-use-set-and-pipefail-in-bash-scripts-on-linux/
# https://gist.github.com/mohanpedala/1e2ff5661761d3abd0385e8223e16425
# https://superuser.com/questions/648331/how-to-properly-restore-settings-when-running-a-script-using-source
SAVED_OPTIONS=$(set +o)
set -euo pipefail

# Debug
# set -x # source variables.ini 2> log.txt


# If DEPLOYMENT (enviroment variable) is null or unset, set it to DEV. To avoid
# unbout (-u) error
# TODO: It will be better set default value to PROD
DEPLOYMENT="${DEPLOYMENT:=DEV}"


if [[ "${DEPLOYMENT}" != "DEV" ]] && [[ "${DEPLOYMENT}" != "PROD" ]] && [[ "${DEPLOYMENT}" != "STAGE" ]] ; then
    echo "First argument must be a valid DEPLOYMENT value: DEV | PROD | STAGE"
    echo "Current value ${DEPLOYMENT}"
    return 1
fi


PROJECT_NAME=aigar
LOCALE="es_SV.UTF-8"
MY_TIMEZONE="America/El_Salvador"
MY_HOSTNAME="${MY_HOSTNAME:=${PROJECT_NAME}}"
DBNAME="${DBNAME:=${PROJECT_NAME}}"
: PG_PORT="${PG_PORT:=5432}"
PG_OWNER_USER=postgres  # "${PROJECT_NAME}_owner"

if [[ "${DEPLOYMENT}" == "DEV" ]] ; then
    SSH_PORT=22
    PG_POSTGRES_PASSWD=postgres
    PG_OWNER_PASSWD="${PG_OWNER_USER}"
    PG_ALLOW_EXTERNAL_CON=true

    if id -u "vagrant" >/dev/null 2>&1; then
        DEFAULT_USER=vagrant
    else
        DEFAULT_USER=$(whoami)
        # echo "Vagrant user does not exists. Using: ${DEFAULT_USER}" 1>&2
    fi
    SECRET_KEY=your-secret-key
else
    SSH_PORT="${SSH_PORT:=10000}"
    : "${PG_POSTGRES_PASSWD:=${PG_POSTGRES_PASSWD}}"
    : "${PG_OWNER_PASSWD:=${PG_OWNER_PASSWD}}"
    PG_ALLOW_EXTERNAL_CON="${PG_ALLOW_EXTERNAL_CON:=false}"
    : "${DEFAULT_USER:=${DEFAULT_USER}}"
    : "${DEFAULT_USER_PASSWORD:=${DEFAULT_USER_PASSWORD}}"
    : "${ALLOWED_HOSTS:=${ALLOWED_HOSTS}}"
    : "${SECRET_KEY:=${SECRET_KEY}}"
fi

# Works in Vagrant because we make cd /vagrant/server in bootstrap.sh
_this_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null && pwd)"
SETTINGS="${_this_dir}"


# function lc() {
#     echo "${1}" | awk '{print tolower($0)}'
# }
#
# PROJECT_NAME_LOWERCASE=$(lc ${PROJECT_NAME})


if [[ "${OSTYPE}" == "darwin"* ]]; then
    OS_CODENAME="osx"
    DEFAULT_USER_HOME=$(dscacheutil -q user -a name "${DEFAULT_USER}" | awk '($1 == "dir:") { print $2 }')
else
    OS_CODENAME=$(lsb_release -cs)
    DEFAULT_USER_HOME=$(getent passwd "${DEFAULT_USER}" | cut -d: -f6)
fi


SQLITE_PATH=${_this_dir}/../back/aigar_data/db.sqlite3
# if [[ "${DEPLOYMENT}" != "DEV" ]] ; then
#    SQLITE_PATH=$(python -c 'import os; from platformdirs import PlatformDirs; appname = "aigar_data"; dirs = PlatformDirs(appname=appname, appauthor=False, ensure_exists=True); SQLITE_PATH = os.path.join(dirs.user_data_dir, "db.sqlite3"); print(SQLITE_PATH)')


SQITCH_VERSION='1.2.0'

INSTALL_PYTHON_FROM=pyenv
PYTHON_VERSION=3.11.3
# PYTHON_DIR="/opt/python-${PYTHON_VERSION}"
GUNICORN_PORT="${GUNICORN_PORT:=8000}"
VIRTUALENV_PATH="${DEFAULT_USER_HOME}/.virtualenvs/${PROJECT_NAME}"

WWW_PATH="/var/www/${PROJECT_NAME}"
WWW_MEDIA_PATH="/var/www/media"

GIT_REPO=https://github.com/iCarto/"${PROJECT_NAME}".git



TODAY=$(date '+%y%m%d')

DJANGO_SUPERUSER_PASSWORD=admin

eval "${SAVED_OPTIONS}"
unset SAVED_OPTIONS
unset _this_dir
